//member functions in OOPS c++(DAY 2)
#include <iostream>
using namespace std;

class binary
{
private:
    string s;

public:
    void read(void);
    void check_binary(void);
    string compliment_binary(void);
};

void binary::read(void)
{
    cout << "Enter the binary num: ";
    cin >> s;
}

void binary::check_binary(void)
{
    for (int i = 0; i < s.length(); i++)
    {
        if (s.at(i) != '0' && s.at(i) != '1')
        {
            cout << "Not Binary" << endl;
            return;
        }
    }
    cout << "Binary" << endl;
}

string binary::compliment_binary(void)
{
    string complementedBinary = "";
    for (int i = 0; i < s.length(); i++)
    {
        if (s.at(i) == '0')
        {
            complementedBinary += '1';
        }
        else
        {
            complementedBinary += '0';
        }
    }
    return complementedBinary;
}

int main()
{
    binary b;
    b.read();
    b.check_binary();
    cout << "Complemented Binary: " << b.compliment_binary() << endl;

    return 0;
}
//book objects
#include <iostream>
using namespace std;
class Book
{
private:
    string title;
    string author;

public:
    void settitle(string t);
    void setauthor(string a);
    void show();
};
void Book::settitle(string t)
{
    title = t;
}
void Book::setauthor(string a)
{
    author = a;
}
void Book::show()
{
    cout << "Title :" << title << endl;
    cout << "Author:" << author << endl;
}

int main()
{
    Book b1, b2;
    b1.settitle("The alchemist");
    b1.setauthor("Paulo Coelho");
    b2.settitle("Harry potter and the philospher's");
    b2.settitle("Jk Rowlings");
    int n = 2;
    cout << "Displaying book 1 details:\n";
    b1.show();
    cout << "\n\nDisplaying " << n << "th book details.\n";
    b2.show();
  
    return 0;
}
// HOW TO GET PRODUCT OF COMPLEX NUMBERS USING OOPS IN C++
#include <iostream>
using namespace std;
class ComplexNums
{
private:
    int a;
    int b;

public:
    void SetComplex(int v1, int v2)
    {
        a = v1;
        b = v2;
    }
    void ComplexSum(int O1, int O2)
    {
        a = 01.a + O2.a;
        b = 01.b + 02.b;
    }
    void GetComplexSum(void)
    {
        cout << "The sum is :" << a << "+" << b * "i" << endl;
    }
};
int main()
{
    SetComplex(3, 4);
    ComplexSum(7, 6);
    GetComplexSum();
    return 0;
}
